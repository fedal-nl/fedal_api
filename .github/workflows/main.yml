on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
        postgres:
            image: postgres:latest
            env:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: Spanglish
            ports:
                - 5432:5432
            # needed because the postgres container does not provide a healthcheck
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Install Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libpq-dev
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=B,C,E,F,W,T4,B9 --ignore=E203,E266,E501,W503,F403,F401 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=25 --max-line-length=127 --statistics          
      - name: Run tests
        # These environment variables will take precedence over the ones in the Django settings file
        env:
          # Django settings
          DJANGO_SETTINGS_MODULE: api.test_settings
          # In order for 'run ./manage.py xxx' commands to work, we need to change into the folder in which it's located
        run: |
          ./manage.py migrate
          ./manage.py test --parallel auto --settings=api.test_settings

# name: test_Django
# on: [pull_request, push] # activates the workflow when there is a push or pull request in the repo
# jobs:
#   test_project:
#     runs-on: ubuntu-latest # operating system your code will run on
#     services:
#         postgres:
#           image: postgres:latest
#           env:
#             POSTGRES_USER: postgres
#             POSTGRES_PASSWORD: postgres
#             POSTGRES_DB: Spanglish
#           ports:
#             - 5432:5432
#           # needed because the postgres container does not provide a healthcheck
#           options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#       - run: pip install flake8
#       - run: python -m pip install --upgrade pip
#       - run: pip install -r requirements.txt # install all our dependencies for the project
#       - run: sudo apt-get install libpq-dev # psycopg2 prerequisites
#       - run: | 
#             pwd
#             cd ../api/
#             python manage.py migrate
#             python manage.py test --settings=api.test_settings --parallel auto # run pytest test
#     #   - run: python manage.py test --settings=api.test_settings --parallel auto # run pytest test
#     #   - run: flake8 . # run flake8 test
